# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class EventResponseData(pydantic_v1.BaseModel):
    api_key: typing.Optional[str] = None
    body: typing.Dict[str, typing.Any]
    body_preview: str
    captured_at: dt.datetime
    company_id: typing.Optional[str] = None
    enriched_at: typing.Optional[dt.datetime] = None
    environment_id: typing.Optional[str] = None
    error_message: typing.Optional[str] = None
    feature_ids: typing.List[str]
    id: str
    loaded_at: typing.Optional[dt.datetime] = None
    processed_at: typing.Optional[dt.datetime] = None
    sent_at: typing.Optional[dt.datetime] = None
    status: str
    subtype: typing.Optional[str] = None
    type: str
    updated_at: dt.datetime
    user_id: typing.Optional[str] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
