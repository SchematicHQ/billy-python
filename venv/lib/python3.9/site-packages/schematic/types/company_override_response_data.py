# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .company_detail_response_data import CompanyDetailResponseData
from .entity_trait_definition_response_data import EntityTraitDefinitionResponseData
from .feature_response_data import FeatureResponseData


class CompanyOverrideResponseData(pydantic_v1.BaseModel):
    """
    The updated resource
    """

    company: typing.Optional[CompanyDetailResponseData] = None
    company_id: str
    created_at: dt.datetime
    environment_id: str
    feature: typing.Optional[FeatureResponseData] = None
    feature_id: str
    id: str
    metric_period: typing.Optional[str] = None
    rule_id: str
    updated_at: dt.datetime
    value_bool: typing.Optional[bool] = None
    value_numeric: typing.Optional[int] = None
    value_trait: typing.Optional[EntityTraitDefinitionResponseData] = None
    value_trait_id: typing.Optional[str] = None
    value_type: str

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
